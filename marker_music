import UIKit
import SceneKit
import ARKit
import AVFoundation
​
class ViewController: UIViewController, ARSCNViewDelegate, AVAudioPlayerDelegate {
    
    var audioPlayer:AVAudioPlayer!
    
    @IBOutlet var button:UIButton!
    @IBOutlet var sceneView: ARSCNView!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // デリゲートを設定
        sceneView.delegate = self
        
        // シーンを作成して登録
        sceneView.scene = SCNScene()
        
        // ライトの追加
        sceneView.autoenablesDefaultLighting = true;
        
        // 画像認識の参照用画像をアセットから取得
        let configuration = ARImageTrackingConfiguration()
        configuration.trackingImages = ARReferenceImage.referenceImages(inGroupNamed: "AR Resources", bundle: nil)!
        sceneView.session.run(configuration)
        
        
    }
    
    // マーカーが検出されたとき呼ばれる
    func renderer(_ renderer: SCNSceneRenderer, didAdd node: SCNNode, for anchor: ARAnchor) {
        /*// ノードの作成
        let boxNode = SCNNode()
        // ジオメトリと位置の設定
        boxNode.geometry = SCNBox(width:0.05, height:0.05, length:0.05, chamferRadius: 0)
        boxNode.position.y += 0.025
        // 画像マーカーの子要素にする
        node.addChildNode(boxNode)*/
        
        if(anchor.name == "ジョージア 漫画") {
            // scnファイルからシーンを読み込む
            let scene = SCNScene(named: "art.scnassets/tinker.scn")
            // シーンからノードを検索
            let rabbitNode = (scene?.rootNode.childNode(withName: "obj_0", recursively: false))!
            // 検出面の子要素にする
            node.addChildNode(rabbitNode)
        }
        
        
        
        // 再生する audio ファイルのパスを取得
        let audioPath = Bundle.main.path(forResource: "14664", ofType:"mp3")!
        let audioUrl = URL(fileURLWithPath: audioPath)
        
        
        // auido を再生するプレイヤーを作成する
        var audioError:NSError?
        do {
            audioPlayer = try AVAudioPlayer(contentsOf: audioUrl)
        } catch let error as NSError {
            audioError = error
            audioPlayer = nil
        }
        
        // エラーが起きたとき
        if let error = audioError {
            print("Error \(error.localizedDescription)")
        }
        
        audioPlayer.delegate = self
        audioPlayer.prepareToPlay()
        
    }
    
    // ボタンがタップされた時の処理
    @IBAction func buttonTapped(_ sender : Any) {
        if ( audioPlayer.isPlaying ){
            audioPlayer.stop()
            button.setTitle("Stop", for: UIControl.State())
        }
        else{
            audioPlayer.play()
            button.setTitle("Play", for: UIControl.State())
        }
    }
    
}
